{
  "hash": "a40a890cf034b0371949da75963ab4ba",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"时间序列分析：第一章_2\"\nauthor: \"周博霖\"\ndate: \"2024/8/12\"\ncategories: [学习笔记,统计方法,时间序列分析]\nimage: \"cover.png\"\nbibliography: references.bib\ncsl: apa.csl\nnumber-sections: true\ntoc: true\ntoc-depth: 2\n---\n\n\n\n\n主要参考书籍为Shumway和Stoffer[-@Shumway_2017]的Time Series Analysis and Its Applications: With R Examples。\n\n# 时间序列统计模型\n\n## **白噪声**(*White Noise*)\n\n白噪声：符合$w_t\\sim wn(0,\\sigma_w^2)$的不相关随机变量\n\n独立同分布(independent and identically distributed，iid)的噪声：$w_t\\sim iid(0,\\sigma_w^2)$\n\n高斯白噪声(Gaussian white noise)：$w_t\\sim iidN(0,\\sigma_w^2)$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nw = rnorm(500, 0, 1)                                   # 500 N(0,1) variates\nv = stats::filter(w, sides = 2, filter = rep(1/3, 3))  # moving average\npar(mfrow = c(2, 1))\ntsplot(w, col = 4, main = \"white noise\")\ntsplot(v, col = 4, ylim = c(-3, 3), main = \"moving average\")\n```\n\n::: {.cell-output-display}\n![高斯白噪声序列(上)和高斯白噪声序列的三点移动平均值(下)](第一章_2_files/figure-html/fig-white_noise-1.png){#fig-white_noise width=672}\n:::\n:::\n\n\n## **移动平均值**(*Moving Averages*)和**过滤**(*Filtering*)\n\n用移动平均值$v_t$替换，从而对$w_t$进行平滑处理。[@fig-white_noise]下方图片就是三点移动平均值，其中$v_t=\\frac{1}{3}(w_{t-1}+w_t+w_{t+1})$。从实际效果来讲，实现了较慢的振荡被突出，较快的振荡被掩盖。这种序列一般称为**滤波序列**(*filtered series*)。\n\n`filter()`函数通俗来讲是用来消除噪声的(滤波)，生成[@fig-white_noise]的代码中，参数`filter = rep(1/3, 3)`其实就是`filter = c(1/3, 1/3, 1/3)`，分别表示$w_{t+1}$、$w_t$和$w_{t-1}$的系数。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(x,                # ts数据\n       filter,           # 一个逆时间顺序的滤波器系数向量\n       method = c(\"convolution\", \"recursive\"), # 卷积和递归，卷积是移动平均，递归是自回归，默认卷积\n       sides = 2,        # 只用于卷积，1表示单边滤波(只考虑前面的值)，2表示双边滤波(两边都考虑)\n       circular = F,     # 只用于卷积，是否末尾和开头相连\n       init)             # 只用于递归，初始值，默认0\n```\n:::\n\n\n## **自回归**(*Autoregressions*)\n\n可以换种方式替换$w_t$，即$x_t=x_{t-1}-0.9x_{t-2}+w_t$。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nw = rnorm(550,0,1)  # 50 extra to avoid startup problems\nx = stats::filter(w, filter=c(1,-.9), method=\"recursive\")[-(1:50)]\ntsplot(x, col=4, main=\"自回归\")\n```\n\n::: {.cell-output-display}\n![自回归序列](第一章_2_files/figure-html/fig-autoregressions-1.png){#fig-autoregressions width=672}\n:::\n:::\n\n\n[@fig-autoregressions]的生成代码中，`init`参数默认为0，即$x_1=w_1$、$x_2=x_1+w_2=w_1+w_2$，之后$x_3=x_2-0.9x_1+w_3$。$x_1$和$x_2$显然是不符合要求的，常用做法是去除这一部分，[@fig-autoregressions]的生成代码中多生成了50个数据，之后去除了。\n\n## 带**漂移项**(*Drift*)的**随机游走**(*Random Walk*)\n\n回忆一下之前提到的全球变暖的相关数据。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsplot(gtemp_land, col = 4, type = \"o\", xlab = \"时间\", ylab = \"全球温度偏差/℃\")\n```\n\n::: {.cell-output-display}\n![全球陆地年平均温度偏差(1850-2023)](第一章_2_files/figure-html/fig-全球变暖-1.png){#fig-全球变暖 width=672}\n:::\n:::\n\n\n带漂移项的随机游走模型可以处理这类数据。该模型中\n\n$$\nx_t=\\delta+x_{t-1}+w_t\n$${#eq-rw}\n\n其中$t=1,\\ 2,\\ \\cdots$，$x_0=0$，$w_t$为白噪声，常数$\\delta$为漂移项。当$\\delta=0$时，上述公式(@eq-rw)为随机游走。\n\n\n\n",
    "supporting": [
      "第一章_2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}