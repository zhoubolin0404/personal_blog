[
  {
    "objectID": "posts/time_series/index.html",
    "href": "posts/time_series/index.html",
    "title": "时间序列分析：第一章",
    "section": "",
    "text": "主要参考书籍为Shumway和Stoffer(2017)的Time Series Analysis and Its Applications: With R Examples。\n该书第五版正在制作，配套astsa包中的部分数据集会逐渐更新，所以后期也许会换成第五版内容。\n该内容为学习笔记，会很碎片化，同时参考了作者在github上给出的代码。\n时间序列分析适用情境：\n两种不同但不一定互斥的时间序列分析方法："
  },
  {
    "objectID": "posts/time_series/index.html#强生公司季度每股收益",
    "href": "posts/time_series/index.html#强生公司季度每股收益",
    "title": "时间序列分析：第一章",
    "section": "1.1 强生公司季度每股收益",
    "text": "1.1 强生公司季度每股收益\njj：强生公司的季度每股收益，从1960年第一季度到1980年最后一季度的84个季度(共21年)。\n\nlibrary(astsa)\njj\n\n          Qtr1      Qtr2      Qtr3      Qtr4\n1960  0.710000  0.630000  0.850000  0.440000\n1961  0.610000  0.690000  0.920000  0.550000\n1962  0.720000  0.770000  0.920000  0.600000\n1963  0.830000  0.800000  1.000000  0.770000\n1964  0.920000  1.000000  1.240000  1.000000\n1965  1.160000  1.300000  1.450000  1.250000\n1966  1.260000  1.380000  1.860000  1.560000\n1967  1.530000  1.590000  1.830000  1.860000\n1968  1.530000  2.070000  2.340000  2.250000\n1969  2.160000  2.430000  2.700000  2.250000\n1970  2.790000  3.420000  3.690000  3.600000\n1971  3.600000  4.320000  4.320000  4.050000\n1972  4.860000  5.040000  5.040000  4.410000\n1973  5.580000  5.850000  6.570000  5.310000\n1974  6.030000  6.390000  6.930000  5.850000\n1975  6.930000  7.740000  7.830000  6.120000\n1976  7.740000  8.910000  8.280000  6.840000\n1977  9.540000 10.260000  9.540000  8.729999\n1978 11.880000 12.060000 12.150000  8.910000\n1979 14.040000 12.960000 14.850000  9.990000\n1980 16.200000 14.670000 16.020000 11.610000\n\n\n\ntsplot(jj, col = 4, type = \"o\", xlab = \"时间\", ylab = \"季度每股收益\")\n\n\n\n\n\n\n\n图 1: 强生公司季度每股收益"
  },
  {
    "objectID": "posts/time_series/index.html#全球变暖",
    "href": "posts/time_series/index.html#全球变暖",
    "title": "时间序列分析：第一章",
    "section": "1.2 全球变暖",
    "text": "1.2 全球变暖\n这里我使用了最新数据，老数据globtemp计划被删除。\ngtemp_land：1850年到2023年，每年地球陆地年平均温度偏差(以摄氏度为单位，相对于1991-2020年的平均值)。\n\ngtemp_land\n\nTime Series:\nStart = 1850 \nEnd = 2023 \nFrequency = 1 \n  [1] -0.50 -0.60 -0.50 -0.50 -0.20 -0.50 -0.80 -0.40 -0.40 -0.10 -0.70 -0.20\n [13] -0.50 -0.20 -0.30 -0.60 -0.40 -0.60 -0.30 -0.50 -0.20 -0.10 -0.40 -0.30\n [25] -0.40 -0.50 -0.20 -0.10  0.26 -0.20 -0.50 -0.40 -0.20 -0.40 -0.70 -0.40\n [37] -0.50 -0.30 -0.70  0.00 -0.20 -0.30 -0.50 -0.40  0.10 -0.50 -0.50 -0.70\n [49] -1.10 -0.50  0.00  0.21 -0.40  0.05 -0.60 -0.70 -0.30 -0.30 -0.80 -0.70\n [61] -0.50 -0.80 -0.70 -0.40 -0.10 -0.20 -0.50 -1.00 -0.30 -0.50  0.05 -0.10\n [73]  0.00 -0.30  0.01 -0.20  0.53 -0.60 -0.20 -0.30  0.21 -0.10 -0.10 -0.30\n [85] -0.30  0.13 -0.30 -0.40  0.38 -0.20  0.06 -0.10 -0.10  0.00  0.36  0.00\n [97]  0.00  0.32 -0.30  0.24  0.00 -0.20 -0.30  0.33 -0.30 -0.60 -0.20 -0.30\n[109]  0.03  0.49 -0.90  0.08  0.36 -0.40 -0.30 -0.10 -0.10  0.19  0.80 -0.20\n[121]  0.00  0.00  0.13  0.61  0.18  0.32 -0.20  0.29  0.37  0.10  0.19  0.85\n[133]  0.00  0.64  0.36  0.42  0.67 -0.20  0.51  0.66  1.61  0.45  0.78  0.64\n[145]  0.41  0.75  0.44  0.81  0.94  0.36  1.14  0.85  1.58  0.84  1.02  1.36\n[157]  1.20  1.27  1.65  0.83  1.54  1.27  0.93  1.10  1.52  1.76  2.50  2.15\n[169]  1.63  2.14  1.95  1.58  2.13  2.26\n\n\n\ntsplot(gtemp_land, col = 4, type = \"o\", xlab = \"时间\", ylab = \"全球温度偏差/℃\")\n\n\n\n\n\n\n\n图 2: 全球陆地年平均温度偏差(1850-2023)"
  },
  {
    "objectID": "posts/time_series/index.html#语音数据",
    "href": "posts/time_series/index.html#语音数据",
    "title": "时间序列分析：第一章",
    "section": "1.3 语音数据",
    "text": "1.3 语音数据\nspeech：为“aaa…hhh”这一短语录制的0.1秒(1000采样点)语音样本。\n\nattributes(speech)\n\n$tsp\n[1]    1 1020    1\n\n$class\n[1] \"ts\"\n\n\n\ntsplot(speech)\n\n\n\n\n\n\n\n图 3: 10000点每秒速度采样的音节aaa···hhh的语音记录，n = 1020"
  },
  {
    "objectID": "posts/time_series/index.html#道琼斯工业平均指数",
    "href": "posts/time_series/index.html#道琼斯工业平均指数",
    "title": "时间序列分析：第一章",
    "section": "1.4 道琼斯工业平均指数",
    "text": "1.4 道琼斯工业平均指数\ndjia：从2006年4月20日到2016年4月20日，道琼斯工业平均指数的每日数值\ndjia数据目前只使用其中的收盘价(Close，不确定是昨收还是今收，不过这也不重要)。\n假设\\(x_t\\)是实际值，则\\(r_t=\\frac{x_t-x_{t-1}}{x_{t-1}}\\)是收益率，那么\\(1+r_t=\\frac{x_t}{x_{t-1}}\\)，则有\\(log(1+r_t)=log(\\frac{x_t}{x_{t-1}})=log(x_t)-log(x_{t-1})\\approx r_t\\)(\\(r_t\\)很小，泰勒级数展开后成立)。\ndjiar为2006年4月21日到2016年4月20日的日收益率。\n\nlibrary(xts)\ndjiar = diff(log(djia$Close))[-1]\n\n\nplot(djiar, col = 4, main = \"DJIA Returns\") \n\n\n\n\n\n\n\n图 4: DJIA日收益率"
  },
  {
    "objectID": "posts/time_series/index.html#厄尔尼诺和鱼群",
    "href": "posts/time_series/index.html#厄尔尼诺和鱼群",
    "title": "时间序列分析：第一章",
    "section": "1.5 厄尔尼诺和鱼群",
    "text": "1.5 厄尔尼诺和鱼群\nsoi：1950-1987年间453个月的南方涛动指数(SOI)\nrec：1950-1987年间453个月的新鱼数量指数(Recruitment)\n\npar(mfrow = c(2, 1)) \ntsplot(soi, col = 4, xlab = \"\", ylab = \"\", main = \"Southern Oscillation Index\")\ntsplot(rec, col = 4, xlab = \"\", ylab = \"\", main = \"Recruitment\") \n\n\n\n\n\n\n\n图 5: 每月SOI和新鱼数量指数"
  },
  {
    "objectID": "posts/time_series/index.html#fmri成像",
    "href": "posts/time_series/index.html#fmri成像",
    "title": "时间序列分析：第一章",
    "section": "1.6 fMRI成像",
    "text": "1.6 fMRI成像\nfmri1：由8个位置的平均fMRI 血氧水平依赖(BOLD)信号组成的数据集。刺激持续32秒，然后停止32秒。信号周期为64秒，采样率为每2秒1次，采样时间为256秒(\\(n=128\\))。\n\npar(mfrow = c(2, 1))  \ntsplot(fmri1[, 2:5], col = 1:4, ylab = \"BOLD\", main = \"大脑皮层\", spaghetti = TRUE)\ntsplot(fmri1[, 6:9], col = 1:4, ylab = \"BOLD\", main = \"丘脑和小脑\", spaghetti = TRUE)\n\n\n\n\n\n\n\n图 6: 大脑皮层、丘脑、小脑各部位的fMRI数据\n\n\n\n\n\n\ntsplot(fmri1[, 2:9], col = 1:8, lwd = 2, ncol = 2, ylim = c(-.6,.6))\n\n\n\n\n\n\n\n图 7: 分别展示\n\n\n\n\n\n\nx = ts(fmri1[, 4:9], start = 0, freq = 32)         \nnames = c(\"大脑皮层\", \"丘脑\", \"小脑\")\nu = ts(rep(c(rep(.6, 16), rep(-.6, 16)), 4), start = 0, freq = 32)\npar(mfrow = c(3, 1))\nfor (i in 1:3){ \n  j = 2*i - 1\n  tsplot(x[, j:(j+1)], ylab = \"BOLD\", xlab = \"\", main = names[i], col = 5:6, ylim = c(-.6, .6), \n         lwd = 2, xaxt = \"n\", spaghetti = TRUE)\n  axis(seq(0, 256, 64), side = 1, at = 0:4)\n  lines(u, type = \"s\", col = gray(.3)) \n}\nmtext(\"seconds\", side = 1, line = 1.75, cex = .9)\n\n\n\n\n\n\n\n图 8: 包含刺激信息"
  },
  {
    "objectID": "posts/time_series/index.html#地震和爆炸",
    "href": "posts/time_series/index.html#地震和爆炸",
    "title": "时间序列分析：第一章",
    "section": "1.7 地震和爆炸",
    "text": "1.7 地震和爆炸\nEQ5：某地区地震的纵波和横波(两阶段) EXP6：某地区爆炸的纵波和横波(两阶段)\n\npar(mfrow = 2:1)\ntsplot(EQ5,  col = 4, main = \"地震\")\ntsplot(EXP6, col = 4, main = \"爆炸\")\n\n\n\n\n\n\n\n图 9: 地震和爆炸两阶段，1秒40个采样点"
  },
  {
    "objectID": "posts/time_series/index.html#白噪声white-noise",
    "href": "posts/time_series/index.html#白噪声white-noise",
    "title": "时间序列分析：第一章",
    "section": "2.1 白噪声(White Noise)",
    "text": "2.1 白噪声(White Noise)\n白噪声：符合\\(w_t\\sim wn(0,\\sigma_w^2)\\)的不相关随机变量\n独立同分布(independent and identically distributed，iid)的噪声：\\(w_t\\sim iid(0,\\sigma_w^2)\\)\n高斯白噪声(Gaussian white noise)：\\(w_t\\sim iidN(0,\\sigma_w^2)\\)\n\nset.seed(1)\nw = rnorm(500, 0, 1)                                   # 500 N(0,1) variates\nv = stats::filter(w, sides = 2, filter = rep(1/3, 3))  # moving average\npar(mfrow = c(2, 1))\ntsplot(w, col = 4, main = \"white noise\")\ntsplot(v, col = 4, ylim = c(-3, 3), main = \"moving average\")\n\n\n\n\n\n\n\n图 10: 高斯白噪声序列(上)和高斯白噪声序列的三点移动平均值(下)"
  },
  {
    "objectID": "posts/time_series/index.html#移动平均值moving-averages和过滤filtering",
    "href": "posts/time_series/index.html#移动平均值moving-averages和过滤filtering",
    "title": "时间序列分析：第一章",
    "section": "2.2 移动平均值(Moving Averages)和过滤(Filtering)",
    "text": "2.2 移动平均值(Moving Averages)和过滤(Filtering)\n用移动平均值\\(v_t\\)替换，从而对\\(w_t\\)进行平滑处理。图 10下方图片就是三点移动平均值，其中\\(v_t=\\frac{1}{3}(w_{t-1}+w_t+w_{t+1})\\)。从实际效果来讲，实现了较慢的振荡被突出，较快的振荡被掩盖。这种序列一般称为滤波序列(filtered series)。\nfilter()函数通俗来讲是用来消除噪声的(滤波)，生成图 10的代码中，参数filter = rep(1/3, 3)其实就是filter = c(1/3, 1/3, 1/3)，分别表示\\(w_{t+1}\\)、\\(w_t\\)和\\(w_{t-1}\\)的系数。\n\nfilter(x,                # ts数据\n       filter,           # 一个逆时间顺序的滤波器系数向量\n       method = c(\"convolution\", \"recursive\"), # 卷积和递归，卷积是移动平均，递归是自回归，默认卷积\n       sides = 2,        # 只用于卷积，1表示单边滤波(只考虑前面的值)，2表示双边滤波(两边都考虑)\n       circular = F,     # 只用于卷积，是否末尾和开头相连\n       init)             # 只用于递归，初始值，默认0"
  },
  {
    "objectID": "posts/time_series/index.html#自回归autoregressions",
    "href": "posts/time_series/index.html#自回归autoregressions",
    "title": "时间序列分析：第一章",
    "section": "2.3 自回归(Autoregressions)",
    "text": "2.3 自回归(Autoregressions)\n可以换种方式替换\\(w_t\\)，即\\(x_t=x_{t-1}-0.9x_{t-2}+w_t\\)。\n\nset.seed(1)\nw = rnorm(550,0,1)  # 50 extra to avoid startup problems\nx = stats::filter(w, filter = c(1, -.9), method = \"recursive\")[-(1:50)]\ntsplot(x, col = 4, main = \"自回归\")\n\n\n\n\n\n\n\n图 11: 自回归序列\n\n\n\n\n\n生成图 11的代码中，init参数默认为0，即\\(x_1=w_1\\)、\\(x_2=x_1+w_2=w_1+w_2\\)，之后\\(x_3=x_2-0.9x_1+w_3\\)。\\(x_1\\)和\\(x_2\\)显然是不符合要求的，常用方法是去除这一部分，生成图 11的代码中多生成了50个数据，之后去除了。"
  },
  {
    "objectID": "posts/time_series/index.html#带漂移项drift的随机游走random-walk",
    "href": "posts/time_series/index.html#带漂移项drift的随机游走random-walk",
    "title": "时间序列分析：第一章",
    "section": "2.4 带漂移项(Drift)的随机游走(Random Walk)",
    "text": "2.4 带漂移项(Drift)的随机游走(Random Walk)\n带漂移项的随机游走模型适合处理图 2所展示的全球变暖相关数据。该模型中\n\\[\nx_t=\\delta+x_{t-1}+w_t\n\\tag{1}\\]\n其中\\(t=1,\\ 2,\\ \\cdots\\)，\\(x_0=0\\)，\\(w_t\\)为白噪声，常数\\(\\delta\\)为漂移项。当\\(\\delta=0\\)时，式 1为随机游走。\n式 1还可以转化为\\(x_t=\\delta t+\\sum_{j=1}^{t}w_j\\)，可见当\\(\\delta=0\\)时，\\(x_t\\)就是白噪声累加和。\n\nset.seed(154)\nw = rnorm(200)\nx = cumsum(w)\nwd = w + .2\nxd = cumsum(wd)\ntsplot(xd, ylim = c(-5, 55), main = \"random walk\", ylab = '')\nlines(x, col = 4) \nclip(0, 200, 0, 50)\nabline(h = 0, col = 4, lty = 2)\nabline(a = 0, b = .2, lty = 2)\n\n\n\n\n\n\n\n图 12: 随机游走图\n\n\n\n\n\n图 12中\\(\\sigma_w=1\\)，黑色实线的漂移项\\(\\delta=0.2\\)，黑色虚线是斜率为0.2的直线，蓝色实线为随机游走(无漂移项，即\\(\\delta=0\\))，蓝色虚线表示\\(y=0\\)的直线。"
  },
  {
    "objectID": "posts/time_series/index.html#噪声信号signal-in-noise",
    "href": "posts/time_series/index.html#噪声信号signal-in-noise",
    "title": "时间序列分析：第一章",
    "section": "2.5 噪声信号(Signal in Noise)",
    "text": "2.5 噪声信号(Signal in Noise)\n很多时间序列模型都是假设由固定周期性变化的信号和随机噪声叠加构成的，图 6所表示的fMRI序列就有很明显的周期性。\n现在令：\n\\[\nx_t=2\\cos(2\\pi\\frac{t+15}{50})+w_t\n\\tag{2}\\]\n其中\\(t=1,\\ 2,\\ \\cdots,\\ 500\\)，第一项\\(2\\cos(2\\pi\\frac{t+15}{50})\\)就是信号。\n正弦波形还可以写成：\n\\[\nA\\cos(2\\pi\\omega t+\\phi)\n\\]\n其中\\(A\\)是振幅，\\(\\omega\\)是振荡频率，\\(\\phi\\)是相位。式 2中\\(A=2\\)，\\(\\omega=\\frac{1}{50}\\)(50个时间点为一个周期)，\\(\\phi=\\frac{2\\pi15}{50}=0.6\\pi\\)。\n\ncs = 2 * cos(2 * pi * (1:500) / 50 + .6 * pi)\nw = rnorm(500, 0, 1)\npar(mfrow = c(3, 1))\ntsplot(cs, ylab = \"\", main = expression(x[t] == 2 * cos(2 * pi * t / 50 + .6 * pi)))\ntsplot(cs + w, ylab = \"\", main = expression(x[t] == 2 * cos(2 * pi * t / 50 + .6 * pi) + N(0, 1)))\ntsplot(cs + 5 * w, ylab = \"\", main = expression(x[t] == 2 * cos(2 * pi * t / 50 + .6 * pi) + N(0, 25)))\n\n\n\n\n\n\n\n图 13: 余弦波和可加性高斯白噪声污染的余弦图\n\n\n\n\n\n图 13中间的图和下面的图分别加上了\\(\\sigma_w=1\\)和\\(\\sigma_w=5\\)的白噪声。信号被遮掩的程度取决于信号幅度和\\(\\sigma_w\\)的大小。信号幅度和\\(\\sigma_w\\)之比称为信噪比(signal-to-noise ratio，SNR)。SNR越大，检测信号就越容易，反之越难。例如图 13中，中间的图就比较容易看出信号，下面的图就比较困难。通常我们关心的是信号。"
  },
  {
    "objectID": "posts/time_series/index.html#平均函数",
    "href": "posts/time_series/index.html#平均函数",
    "title": "时间序列分析：第一章",
    "section": "3.1 平均函数",
    "text": "3.1 平均函数\n\\[\n\\mu_{xt}=\\operatorname{E}(x_t)=\\int_{-\\infty}^{\\infty}xf_t(x)\\operatorname{d}x\n\\tag{3}\\]\n\n3.1.1 移动平均序列的平均函数\n平均函数和白噪声相同，以图 10里的情况为例。\n白噪声序列\\(w_t\\)有\\(\\mu_{wt}=\\operatorname{E}(w_t)=0\\)，进行平滑后有\\(\\mu_{vt}=\\operatorname{E}(v_t)=\\frac{1}{3}[\\operatorname{E}(w_{t-1})+\\operatorname{E}(w_t)+\\operatorname{E}(w_{t-1})]=0\\)，平均函数不变。\n\n\n3.1.2 带漂移项的随机游走的平均函数\n平均函数为一条直线，以式 1为例。\n已知\\(\\operatorname{E}(w_t)=0\\)，\\(\\delta\\)为常数，有：\n\\[\n\\mu_{x_t}=\\operatorname{E}(x_t)=\\delta t+\\sum_{j=1}^{t}\\operatorname{E}(w_j)=\\delta t\n\\]\n这是一条斜率为\\(\\delta\\)的直线，图 12中的虚线就是其平均函数。\n\n\n3.1.3 信号加噪声的平均函数\n平均函数为余弦波，以式 2为例。\n\\[\n\\mu_{xt}=\\operatorname{E}(x_t)=\\operatorname{E}[2cos(2\\pi\\frac{t+15}{50})+w_t]=2cos(2\\pi\\frac{t+15}{50})+\\operatorname{E}(w_t)=2cos(2\\pi\\frac{t+15}{50})\n\\]"
  },
  {
    "objectID": "posts/time_series/index.html#自协方差函数autocovariance-function",
    "href": "posts/time_series/index.html#自协方差函数autocovariance-function",
    "title": "时间序列分析：第一章",
    "section": "3.2 自协方差函数(Autocovariance Function)",
    "text": "3.2 自协方差函数(Autocovariance Function)\n对于任意\\(s\\)和\\(t\\)，自协方差函数被定义为二阶矩函数：\n\\[\n\\gamma_x(s,t)=\\operatorname{cov}(x_s,x_t)=\\operatorname{E}[(x_s-\\mu_s)(x_t-\\mu_t)]\n\\tag{4}\\]\n自协方差衡量在不同时间观察到的同一时间序列的两点间的线性依赖性。平滑的时间序列，即使\\(t\\)和\\(s\\)相隔很远，自协方差函数也会比较大；而波动大的时间序列，自协方差函数几乎为0。\n从经典统计数据角度来看，如果\\(\\gamma_x(s,t)=0\\)，\\(x_s\\)和\\(x_t\\)非线性相关(可能有其他依赖结构)。但如果\\(x_s\\)和\\(x_t\\)是二元正态分布，\\(\\gamma_x(s,t)=0\\)说明相互独立。对于\\(s=t\\)，自协方差就是方差，即：\n\\[\n\\gamma_x(t,t)=\\operatorname{E}[(x_t-\\mu_t)^2]=\\operatorname{var}(x_t)\n\\]"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "周博霖",
    "section": "",
    "text": "时间序列分析：第一章\n\n\n\n\n\n\n学习笔记\n\n\n统计方法\n\n\n时间序列分析\n\n\n\n\n\n\n\n\n\nAug 10, 2024\n\n\n周博霖\n\n\n\n\n\n\n\n\n\n\n\n\n心理语言学\n\n\n\n\n\n\n学习笔记\n\n\n心理语言学\n\n\n\n\n\n\n\n\n\nAug 9, 2024\n\n\n周博霖\n\n\n\n\n\n\n无匹配项"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "个人简介",
    "section": "",
    "text": "无业游民"
  },
  {
    "objectID": "about.html#教育经历",
    "href": "about.html#教育经历",
    "title": "个人简介",
    "section": "教育经历",
    "text": "教育经历\n2019.09-2023.06：天津师范大学 —— 工商管理(本科)/应用心理学(双学位)"
  },
  {
    "objectID": "posts/notes/index.html",
    "href": "posts/notes/index.html",
    "title": "心理语言学",
    "section": "",
    "text": "脑区和功能\n\n\n\n\n\n\n\n\n脑区\n言语功能\n图片\n\n\n\n\n布洛卡区(Broca’s Area)\n\n\n\n\n威尔尼克区(Wernicke’s Area)"
  }
]