{
  "hash": "39a398adc714bdee0cf96c079bc67cf9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"时间序列分析：第一章习题答案\"\nauthor: \"周博霖\"\ndate: \"2024/9/7\"\ncategories: [学习笔记,统计方法,时间序列分析]\nimage: \"cover.png\"\nbibliography: references.bib\ncsl: apa.csl\nnumber-sections: true\ntoc: true\ntoc-depth: 2\n---\n\n\n主要参考书籍为Shumway和Stoffer[-@Shumway_2017]的Time Series Analysis and Its Applications: With R Examples。\n\n该书第五版正在制作，配套`astsa`包中的部分数据集会逐渐更新，所以后期也许会换成第五版内容。\n\n该内容为第一章的习题答案，基于个人习惯，使用的大多数是`tidyverse`系列代码，会和之前学习笔记中的代码习惯有所不同。\n\n::: callout-tip\n提示框表明这部分完全是个人理解，可能有误。\n\n一切错误和想讨论的内容欢迎联系邮箱(zhoubolin0404@126.com)，感谢！\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(astsa)\nlibrary(cowplot)\n```\n:::\n\n\n\n# 1.1小节\n\n## 1.1\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data.frame(\n    time = 1:length(EQ5),\n    Earthquake = EQ5,\n    Explosion = EXP6\n) %>%\n    pivot_longer(\n        cols = c(\"Earthquake\", \"Explosion\"),\n        names_to = \"type\",\n        values_to = \"value\"\n    )\n\nggplot(data, aes(x = time, y = value, color = type)) +\n    geom_line() +\n    labs(y = \"Amplitude\", x = \"Time\", title = \"Earthquake vs Explosion Signals\") +\n    scale_color_manual(values = c(\"black\", \"red\")) +\n    theme_minimal() +\n    theme(legend.position = \"top\") +\n    guides(color = guide_legend(title = NULL, override.aes = list(linetype = 1)))\n```\n\n::: {.cell-output-display}\n![](Chapter_1_sol_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n爆炸信号消失得更快，早期振幅更大。\n\n## 1.2\n\n(a)和(c)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(44)\ns_a <- c(rep(0, 100), 10 * exp(-(101:200 - 100) / 20) * cos(2 * pi * 101:200 / 4))\nx_a = s_a + rnorm(200)\ndecay_line_a = c(rep(0, 100), 10 * exp(-(1:100) / 20))\ndata_a <- as_tibble(x_a) %>%\n    mutate(time = 1:200, decay_line = decay_line_a)\nggplot(data_a, aes(x = time)) +\n    geom_line(aes(y = value), color = \"black\") +\n    geom_line(aes(y = decay_line), color = \"red\") +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Chapter_1_sol_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n(b)和(c)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(44)\ns_b = c(rep(0, 100), 10 * exp(-(101:200 - 100) / 200) * cos(2 * pi * 101:200 / 4))\nx_b = s_b + rnorm(200)\ndecay_line_b = c(rep(0, 100), 10 * exp(-(1:100) / 200))\ndata_b <- as_tibble(x_b) %>%\n    mutate(time = 1:200, decay_line = decay_line_b)\nggplot(data_b, aes(x = time)) +\n    geom_line(aes(y = value), color = \"black\") +\n    geom_line(aes(y = decay_line), color = \"red\") +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Chapter_1_sol_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n# 1.2小节\n\n## 1.3\n\n(a)-(c)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(44)\nw = rnorm(150, 0, 1)\nx = stats::filter(w, filter = c(0, -0.9), method = \"recursive\")[-(1:50)]\nx2 = 2 * cos(2 * pi * (1:100) / 4)\nx3 = x2 + rnorm(100, 0, 1)\n\nv = stats::filter(x, rep(1, 4) / 4, sides = 1)\nv2 = stats::filter(x2, rep(1, 4) / 4, sides = 1)\nv3 = stats::filter(x3, rep(1, 4) / 4, sides = 1)\n\ndata <- tibble(\n    time = rep(1:100, 3),\n    x_value = c(x, x2, x3),\n    v_value = c(v, v2, v3),\n    type = rep(c(\n        \"autoregression\", \"sinusoid\", \"sinusoid + noise\"\n    ), each = 100)\n) %>%\n    pivot_longer(\n        cols = c(\"x_value\", \"v_value\"),\n        names_to = \"series\",\n        values_to = \"value\"\n    )\n\nggplot(data, aes(\n    x = time,\n    y = value,\n    color = series,\n    linetype = series\n)) +\n    geom_line() +\n    facet_wrap(~ type, ncol = 1) +\n    labs(y = \"Value\", x = \"Time\", title = \"Time Series and Moving Averages\") +\n    scale_color_manual(\n        values = c(\"x_value\" = \"blue\", \"v_value\" = \"red\"),\n        breaks = c(\"x_value\", \"v_value\")\n    ) +\n    scale_linetype_manual(\n        values = c(\"x_value\" = \"solid\", \"v_value\" = \"dashed\"),\n        breaks = c(\"x_value\", \"v_value\")\n    ) +\n    theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Chapter_1_sol_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n(d)\n\n移动平均后都变得更为平缓。\n\n# 1.3小节\n\n## 1.4\n\n$$\n\\begin{aligned}\n\\gamma(s,t)&=\\operatorname{cov}(x_t,x_t)=\\operatorname{E}[(x_s-\\mu_s)(x_t-\\mu_t)]\\\\\n&=\\operatorname{E}(x_sx_t)-\\mu_t\\operatorname{E}(x_s)-\\mu_s\\operatorname{E}(x_t)+\\mu_s\\mu_t\\\\\n&=\\operatorname{E}(x_sx_t)-\\mu_t\\mu_s-\\mu_s\\mu_t+\\mu_s\\mu_t\\\\\n&=\\operatorname{E}(x_sx_t)-\\mu_s\\mu_t\n\\end{aligned}\n$$\n\n## 1.5\n\n(a)\n\n$$\n\\mu_{x}=\\operatorname{E}(s_t+w_t)=s_t\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# a\nset.seed(44)\ns_a <- c(rep(0, 100), 10 * exp(-(101:200 - 100) / 20) * cos(2 * pi * 101:200 / 4))\ndata_a <- tibble(time = 1:200, s_a = s_a)\np_15a <- ggplot(data_a, aes(x = time, y = s_a)) +\n    geom_line() +\n    theme_minimal()\n\n# b\nset.seed(44)\ns_b = c(rep(0, 100), 10 * exp(-(101:200 - 100) / 200) * cos(2 * pi * 101:200 / 4))\ndata_a <- tibble(time = 1:200, s_b = s_b)\np_15b <- ggplot(data_a, aes(x = time, y = s_b)) +\n    geom_line() +\n    theme_minimal()\n\nplot_grid(p_15a, p_15b, ncol = 1)\n```\n\n::: {.cell-output-display}\n![](Chapter_1_sol_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n(b)\n\n$$\n\\begin{aligned}\n\\gamma_x(s,t)&=\\operatorname{cov}(x_s,x_t)=\\operatorname{E}[(x_s-\\mu_s)(x_t-\\mu_t)]\\\\\n&=\\operatorname{E}[(x_s-s_s)(x_t-s_t)]\\\\\n&=\\operatorname{E}(w_sw_t)\n\\end{aligned}\n$$\n\n所以有：\n\n$$\n\\gamma_x(s,t)=\n\\begin{cases}\n\\sigma^2_w=1&s=t\\\\\n0&s\\neq t\n\\end{cases}\n$$\n\n# 1.4小节\n\n## 1.6\n\n(a)\n\n平均函数：\n\n$$\n\\operatorname{E}(x_t)=\\operatorname{E}(\\beta_1+\\beta_2t)=\\beta_1+\\beta_2t\n$$\n\n不是常数，故不是平稳的。\n\n(b)\n\n$$\ny_t=x_t-x_{t-1}=\\beta_2+w_t-w_{t-1}\n$$\n\n平均函数：\n\n$$\n\\operatorname{E}(y_t)=\\operatorname{E}(\\beta_2+w_t-w_{t-1})=\\beta_2\n$$\n\n自协方差函数：\n\n$$\n\\begin{aligned}\n\\gamma_y(h)&=\\operatorname{cov}(y_{t+h},y_t)=\\operatorname{cov}(\\beta_2+w_{t+h}-w_{t+h-1},\\beta_2+w_t-w_{t-1})\\\\\n&=\\operatorname{cov}(w_{t+h},w_t)-\\operatorname{cov}(w_{t+h},w_{t-1})-\\operatorname{cov}(w_{t+h-1},w_t)+\\operatorname{cov}(w_{t+h-1},w_{t-1})\n\\end{aligned}\n$$\n\n显然与$t$无关，结果为：\n\n$$\n\\gamma_y(h)=\\begin{cases}\n2&h=0\\\\\n-1&h=\\pm1\\\\\n0&|h|\\ge2\n\\end{cases}\n$$\n\n所以$y_t$是平稳的。\n\n(c)\n\n均值函数：\n\n$$\n\\begin{aligned}\n\\operatorname{E}(v_t)&=\\frac{1}{2q+1}\\sum_{j=-q}^{q}(\\beta_1+\\beta_2t-\\beta_2j)\\\\\n&=\\frac{1}{2q+1}[(2q+1)(\\beta_1+\\beta_2t)-\\beta_2\\sum_{j=-q}^{q}j]\\\\\n&=\\beta_1+\\beta_2t\n\\end{aligned}\n$$\n\n自协方差函数：\n\n$$\n\\gamma_v(h)=\n$$",
    "supporting": [
      "Chapter_1_sol_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}