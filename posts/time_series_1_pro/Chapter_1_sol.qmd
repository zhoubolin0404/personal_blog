---
title: "时间序列分析：第一章习题答案"
author: "周博霖"
date: "2024/9/7"
categories: [学习笔记,统计方法,时间序列分析]
image: "cover.png"
bibliography: references.bib
csl: apa.csl
number-sections: true
toc: true
toc-depth: 2
---

主要参考书籍为Shumway和Stoffer[-@Shumway_2017]的Time Series Analysis and Its Applications: With R Examples。

该书第五版正在制作，配套`astsa`包中的部分数据集会逐渐更新，所以后期也许会换成第五版内容。

该内容为第一章的习题答案，基于个人习惯，使用的大多数是`tidyverse`系列代码，会和之前学习笔记中的代码习惯有所不同。

::: callout-tip
提示框表明这部分完全是个人理解，可能有误。

一切错误和想讨论的内容欢迎联系邮箱(zhoubolin0404@126.com)，感谢！
:::

```{r,warning=FALSE,message=FALSE}
library(tidyverse)
library(astsa)
```


# 1.1节

## 1.1

```{r}
# 将EQ5和EXP6转换为数据框并合并
data <- data.frame(
    time = 1:length(EQ5),
    Earthquake = EQ5,
    Explosion = EXP6
) %>%
    pivot_longer(
        cols = c("Earthquake", "Explosion"),
        names_to = "type",
        values_to = "value"
    )

# 绘图
ggplot(data, aes(x = time, y = value, color = type)) +
  geom_line() +
  labs(y = "Amplitude", x = "Time", title = "Earthquake vs Explosion Signals") +
  scale_color_manual(values = c("black", "red")) +
  theme_minimal() +
  theme(legend.position = "top") +
  guides(color = guide_legend(title = NULL, override.aes = list(linetype = 1)))
```

爆炸信号消失得更快，早期振幅更大。

## 1.2

(a)和(c)

```{r}
set.seed(44)
s_a <- c(rep(0, 100), 10 * exp(-(101:200 - 100) / 20) * cos(2 * pi * 101:200 / 4))
x_a = s_a + rnorm(200)
decay_line_a = c(rep(0, 100), 10 * exp(-(1:100) / 20))
data_a <- as_tibble(x_a) %>%
    mutate(time = 1:200, decay_line = decay_line_a)
ggplot(data_a, aes(x = time)) +
    geom_line(aes(y = value), color = "black") +
    geom_line(aes(y = decay_line), color = "red") +
    theme_minimal()
```

(b)和(c)

```{r}
set.seed(44)
s_b = c(rep(0, 100), 10 * exp(-(101:200 - 100) / 200) * cos(2 * pi * 101:200 / 4))
x_b = s_b + rnorm(200)
decay_line_b = c(rep(0, 100), 10 * exp(-(1:100) / 200))
data_b <- as_tibble(x_b) %>%
    mutate(time = 1:200, decay_line = decay_line_b)
ggplot(data_b, aes(x = time)) +
    geom_line(aes(y = value), color = "black") +
    geom_line(aes(y = decay_line), color = "red") +
    theme_minimal()
```

# 1.2节

## 1.3

(a)

```{r,warning=FALSE}
set.seed(44)
w = rnorm(150, 0, 1)
x = stats::filter(w, filter = c(0, -0.9), method = "recursive")[-(1:50)]
x2 = 2 * cos(2 * pi * (1:100) / 4)
x3 = x2 + rnorm(100, 0, 1)

# 计算移动平均线
v = stats::filter(x, rep(1, 4) / 4, sides = 1)
v2 = stats::filter(x2, rep(1, 4) / 4, sides = 1)
v3 = stats::filter(x3, rep(1, 4) / 4, sides = 1)

# 创建数据框
data <- tibble(
    time = rep(1:100, 3),
    ar_value = c(x, x2, x3),
    ma_value = c(v, v2, v3),
    type = rep(c(
        "autoregression", "sinusoid", "sinusoid + noise"
    ), each = 100)
) %>%
    pivot_longer(
        cols = c("ar_value", "ma_value"),
        names_to = "series",
        values_to = "value"
    )

# 使用 ggplot2 绘图
ggplot(data, aes(
    x = time,
    y = value,
    color = series,
    linetype = series
)) +
    geom_line() +
    facet_wrap(~ type, ncol = 1) +
    labs(y = "Value", x = "Time", title = "Time Series and Moving Averages") +
    scale_color_manual(values = c("blue", "red")) +
    scale_linetype_manual(values = c("solid", "dashed")) +
    theme_minimal()
```